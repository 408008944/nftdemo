package com.example.nftdemo.utils;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint16;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple8;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.*;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class MintManager extends Contract {
    public static final String BINARY = "0x6101e0604052611b58610140908152612328610160526126ac610180526127066101a0526127106101c0526200003a90602a906005620004a9565b50604080516080810182526109c481526113886020820152611d4c9181019190915261271060608201526200007490602b906004620004a9565b503480156200008257600080fd5b5060405162004ff538038062004ff5833981016040819052620000a5916200062f565b604080518082018252600b81526a26b4b73a26b0b730b3b2b960a91b6020808301918252835180850185526006815265076312e302e360d41b818301526002805460ff19169055835190922060e08190527f15124d26d1272f8d4d5266a24ca397811f414b8cd05a53b26b745f63af5ae2fc6101008190524660a081815287517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818701819052818a01959095526060810193909352608080840192909252308382018190528851808503909201825260c09384019098528051940193909320909252939052610120929092528291620001a160003362000344565b620001cd7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3362000344565b620001e860008051602062004fd58339815191528462000344565b6200020360008051602062004fd58339815191523362000344565b50506001600160a01b03166000908152600360209081526040918290208054600160ff1991821617909155875160055587820151600655878301516007556060808901516008556080808a015160095560a0808b0151600a5560c0808c0151600b8054871660ff92831617905560e09c8d0151600c558b51600e558b870151600f558b8801516010558b8501516011558b8401516012558b8301516013558b8201516014805488169183169190911790559a8c01516015558951601755898601516018558987015160195589840151601a5589830151601b5589820151601c5589810151601d80548716918d16919091179055988b0151601e558751855593870151602155938601516022558501516023559184015160245583015160255592820151602680549094169416939093179091559091015160275550620006b8565b62000350828262000354565b5050565b6200036b82826200039760201b62001eb11760201c565b60008281526001602090815260409091206200039291839062001f4f62000437821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000350576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620003f33390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006200044e836001600160a01b03841662000457565b90505b92915050565b6000818152600183016020526040812054620004a05750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000451565b50600062000451565b82805482825590600052602060002090600f01601090048101928215620005475791602002820160005b838211156200051557835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302620004d3565b8015620005455782816101000a81549061ffff021916905560020160208160010104928301926001030262000515565b505b506200055592915062000559565b5090565b5b808211156200055557600081556001016200055a565b805160ff811681146200058257600080fd5b919050565b60006101008083850312156200059c57600080fd5b604051908101906001600160401b0382118183101715620005cd57634e487b7160e01b600052604160045260246000fd5b81604052809250835181526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a08201526200061860c0850162000570565b60c082015260e084015160e0820152505092915050565b600080600080600061042086880312156200064957600080fd5b62000655878762000587565b94506200066787610100880162000587565b93506200067987610200880162000587565b92506200068b87610300880162000587565b6104008701519092506001600160a01b0381168114620006aa57600080fd5b809150509295509295909350565b60805160a05160c05160e05161010051610120516148cd620007086000396000613586015260006135d5015260006135b001526000613509015260006135330152600061355d01526148cd6000f3fe6080604052600436106103765760003560e01c80637da3a781116101d1578063b988094e11610102578063e48eff0a116100a0578063eb7d06941161006f578063eb7d069414610b60578063ef7edd1d14610b80578063f4cbae9114610ba0578063f981757014610bc057600080fd5b8063e48eff0a14610ab8578063e5622abc14610aec578063e63ab1e914610b0c578063eb12d61e14610b4057600080fd5b8063ca15c873116100dc578063ca15c87314610a38578063ca38873d14610a58578063d547741f14610a78578063d630bb1f14610a9857600080fd5b8063b988094e146109e5578063c324965b146109f8578063ca097f8914610a1857600080fd5b806391d148541161016f578063a53785b411610149578063a53785b41461094f578063a8fbac1c1461096f578063b25cfa3a146109a5578063b34f9026146109c557600080fd5b806391d14854146108e157806393c5166114610925578063a217fddf1461093a57600080fd5b80638456cb59116101ab5780638456cb5914610856578063883b524f1461086b5780638f970fa51461088b5780639010d07c146108c157600080fd5b80637da3a781146107d55780637f513d5d1461080b578063808d0f371461084357600080fd5b806351cff8d9116102ab5780635efde27711610249578063736c0d5b11610223578063736c0d5b14610730578063757699d414610760578063763f77af14610780578063786fd116146107b357600080fd5b80635efde277146106d057806363ecc10f146106f05780636449c9001461071057600080fd5b80635c975abb116102855780635c975abb1461064b5780635e1045ec146106635780635e57966d146106835780635ed0ef80146106b057600080fd5b806351cff8d9146105c957806359060e2b146105e957806359af2ba11461060957600080fd5b8063337de2ad116103185780633f4ba83a116102f25780633f4ba83a1461050057806342a8be3414610515578063444f6b76146105355780634d10e6f3146105a957600080fd5b8063337de2ad1461049057806336568abe146104b0578063372c12b1146104d057600080fd5b80630769016a116103545780630769016a146103f0578063248a9ca31461041057806325a56c961461044e5780632f2ff15d1461047057600080fd5b806301ffc9a71461037b5780630317c4ee146103b057806303f314f0146103d0575b600080fd5b34801561038757600080fd5b5061039b610396366004613a18565b610be0565b60405190151581526020015b60405180910390f35b3480156103bc57600080fd5b5061039b6103cb366004613b46565b610c24565b3480156103dc57600080fd5b5061039b6103eb366004613ba6565b610c45565b3480156103fc57600080fd5b5061039b61040b366004613cad565b610ca5565b34801561041c57600080fd5b5061044061042b366004613d3f565b60009081526020819052604090206001015490565b6040519081526020016103a7565b34801561045a57600080fd5b5061046e610469366004613cad565b610db1565b005b34801561047c57600080fd5b5061046e61048b366004613d58565b610ef3565b34801561049c57600080fd5b5061039b6104ab366004613ba6565b610f1e565b3480156104bc57600080fd5b5061046e6104cb366004613d58565b610f7e565b3480156104dc57600080fd5b5061039b6104eb366004613d88565b60286020526000908152604090205460ff1681565b34801561050c57600080fd5b5061039b61100a565b34801561052157600080fd5b5061039b610530366004613da5565b611048565b34801561054157600080fd5b5060205460215460225460235460245460255460265460275461056b9796959493929160ff169088565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260ff1660c083015260e0820152610100016103a7565b3480156105b557600080fd5b5061039b6105c4366004613b46565b61106b565b3480156105d557600080fd5b5061039b6105e4366004613d88565b611083565b3480156105f557600080fd5b5061039b610604366004613e40565b61110f565b34801561061557600080fd5b50610639610624366004613d3f565b60296020526000908152604090205460ff1681565b60405160ff90911681526020016103a7565b34801561065757600080fd5b5060025460ff1661039b565b34801561066f57600080fd5b5061039b61067e366004613ead565b6111aa565b34801561068f57600080fd5b506106a361069e366004613d88565b61123f565b6040516103a79190613f77565b3480156106bc57600080fd5b5061039b6106cb366004613cad565b611467565b3480156106dc57600080fd5b5061039b6106eb366004613faa565b61153c565b3480156106fc57600080fd5b5061039b61070b366004613ba6565b61172f565b34801561071c57600080fd5b5061039b61072b366004613d88565b61178f565b34801561073c57600080fd5b5061039b61074b366004613d88565b60036020526000908152604090205460ff1681565b34801561076c57600080fd5b5061039b61077b366004613ead565b6117d0565b34801561078c57600080fd5b506107a061079b366004613d3f565b611865565b60405161ffff90911681526020016103a7565b3480156107bf57600080fd5b506107c861189d565b6040516103a79190613fdf565b3480156107e157600080fd5b50600e54600f5460105460115460125460135460145460155461056b9796959493929160ff169088565b34801561081757600080fd5b50601f5461082b906001600160a01b031681565b6040516001600160a01b0390911681526020016103a7565b61039b610851366004613e40565b61191d565b34801561086257600080fd5b5061039b6119b5565b34801561087757600080fd5b5061039b610886366004613d88565b6119ea565b34801561089757600080fd5b50601754601854601954601a54601b54601c54601d54601e5461056b9796959493929160ff169088565b3480156108cd57600080fd5b5061082b6108dc366004614027565b611a1d565b3480156108ed57600080fd5b5061039b6108fc366004613d58565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561093157600080fd5b506107c8611a3c565b34801561094657600080fd5b50610440600081565b34801561095b57600080fd5b5061039b61096a366004614049565b611a97565b34801561097b57600080fd5b50600554600654600754600854600954600a54600b54600c5461056b9796959493929160ff169088565b3480156109b157600080fd5b5061039b6109c0366004613e40565b611af5565b3480156109d157600080fd5b5061039b6109e0366004614094565b611b90565b61039b6109f336600461412b565b611bb0565b348015610a0457600080fd5b5061039b610a13366004613d88565b611c3e565b348015610a2457600080fd5b506107a0610a33366004613d3f565b611c7f565b348015610a4457600080fd5b50610440610a53366004613d3f565b611c8f565b348015610a6457600080fd5b5061039b610a73366004613b46565b611ca6565b348015610a8457600080fd5b5061046e610a93366004613d58565b611cbe565b348015610aa457600080fd5b5061039b610ab3366004613ba6565b611ce4565b348015610ac457600080fd5b506104407ffbd6b3ad612c81ecfcef77ba888ef41173779a71e0dbe944f953d7c64fd9dc5d81565b348015610af857600080fd5b5061039b610b07366004613cad565b611d44565b348015610b1857600080fd5b506104407f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b348015610b4c57600080fd5b5061039b610b5b366004613d88565b611e19565b348015610b6c57600080fd5b5060165461082b906001600160a01b031681565b348015610b8c57600080fd5b5061039b610b9b366004614094565b611e50565b348015610bac57600080fd5b5061039b610bbb366004613d88565b611e70565b348015610bcc57600080fd5b50600d5461082b906001600160a01b031681565b60006001600160e01b031982167f5a05180f000000000000000000000000000000000000000000000000000000001480610c1e5750610c1e82611f64565b92915050565b600080610c318133611fcb565b610c3c858585612049565b95945050505050565b600080610c528133611fcb565b50508051600e556020810151600f5560408101516010556060810151601155608081015160125560a081015160135560c08101516014805460ff191660ff90921691909117905560e00151601555600190565b6000610cb38585858561211a565b6016546040516364948ecf60e01b81526000916001600160a01b0316906364948ecf90610ce89089908990339060040161421d565b6020604051808303816000875af1158015610d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2b919061425c565b905080610da55760405162461bcd60e51b815260206004820152602560248201527f446566656e73697665466163696c697479204e4654206d6967726174696f6e2060448201527f4661696c2100000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b50600195945050505050565b60007f3458c5835ac208c695f89099a826431e81a26e546140fabcb2e124ec46e6b22185604051602001610de5919061427e565b6040516020818303038152906040528051906020012085604051602001610e0c919061427e565b60405160208183030381529060405280519060200120610e293390565b60408051602081019590955284019290925260608301526001600160a01b0316608082015260a0810184905260c00160405160208183030381529060405290506000610e75828461214e565b50905080610eeb5760405162461bcd60e51b815260206004820152603e60248201527f6d696e743a20546865206f7065726174696f6e206f662053706163657368697060448201527f4d6967726174696f6e207065726d697373696f6e2069732077726f6e672100006064820152608401610d9c565b505050505050565b600082815260208190526040902060010154610f0f8133611fcb565b610f1983836121b9565b505050565b600080610f2b8133611fcb565b50508051600555602081015160065560408101516007556060810151600855608081015160095560a0810151600a5560c0810151600b805460ff191660ff90921691909117905560e00151600c55600190565b6001600160a01b0381163314610ffc5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610d9c565b61100682826121db565b5050565b60007f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6110378133611fcb565b61103f6121fd565b600191505b5090565b6000806110558133611fcb565b61106186868686612299565b9695505050505050565b6000806110788133611fcb565b610c3c8585856122d7565b6000806110908133611fcb565b6040516000906001600160a01b038516904780156108fc029184818181858888f193505050509050806111055760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f20776974686472617720466565732100000000000000006044820152606401610d9c565b5060019392505050565b60008061111c8133611fcb565b604080516101008101825260208054825260215490820152602254918101919091526023546060820152602454608082015260255460a082015260265460ff1660c082015260275460e0820152855161117591906123ce565b6111808585856125ed565b8451602280546000906111949084906142ca565b90915550610c3c9050853360265460ff16612702565b60007ffbd6b3ad612c81ecfcef77ba888ef41173779a71e0dbe944f953d7c64fd9dc5d6111d78133611fcb565b60005b8351811015611105576001602860008684815181106111fb576111fb6142e2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580611237816142f8565b9150506111da565b604080518082018252601081527f303132333435363738396162636465660000000000000000000000000000000060208201528151602a80825260608281019094526001600160a01b0385169291600091602082018180368337019050509050600360fc1b816000815181106112b7576112b76142e2565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106112e6576112e66142e2565b60200101906001600160f81b031916908160001a90535060005b601481101561145e578260048561131884600c6142ca565b60208110611328576113286142e2565b1a60f81b6001600160f81b031916901c60f81c60ff168151811061134e5761134e6142e2565b01602001517fff000000000000000000000000000000000000000000000000000000000000001682611381836002614313565b61138c9060026142ca565b8151811061139c5761139c6142e2565b60200101906001600160f81b031916908160001a90535082846113c083600c6142ca565b602081106113d0576113d06142e2565b825191901a600f169081106113e7576113e76142e2565b01602001517fff00000000000000000000000000000000000000000000000000000000000000168261141a836002614313565b6114259060036142ca565b81518110611435576114356142e2565b60200101906001600160f81b031916908160001a90535080611456816142f8565b915050611300565b50949350505050565b600061147585858585610db1565b601f546040516364948ecf60e01b81526000916001600160a01b0316906364948ecf906114aa9089908990339060040161421d565b6020604051808303816000875af11580156114c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ed919061425c565b905080610da55760405162461bcd60e51b815260206004820152601860248201527f4865726f204e4654206d6967726174696f6e204661696c2100000000000000006044820152606401610d9c565b6000806115498133611fcb565b600d546040517f186a58ca0000000000000000000000000000000000000000000000000000000081526000916001600160a01b03169063186a58ca90611593908790600401614332565b600060405180830381865afa1580156115b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115d89190810190614345565b600d546040805161010081018252600e548152600f546020820152601054918101919091526011546060820152601254608082015260135460a082015260145460ff1660c082015260155460e08201529192506000916001600160a01b0390911690635f23d35c90879061164f90829087906127d3565b6040518363ffffffff1660e01b815260040161166c9291906143d4565b6020604051808303816000875af115801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af919061425c565b9050806117245760405162461bcd60e51b815260206004820152603160248201527f496e697469616c697a6174696f6e206f6620746865205370616365736869702060448201527f4e46542067656e65206661696c656420210000000000000000000000000000006064820152608401610d9c565b506001949350505050565b60008061173c8133611fcb565b50508051602090815581015160215560408101516022556060810151602355608081015160245560a081015160255560c08101516026805460ff191660ff90921691909117905560e00151602755600190565b60008061179c8133611fcb565b601680546001600160a01b03851673ffffffffffffffffffffffffffffffffffffffff199091161790556001915050919050565b60007ffbd6b3ad612c81ecfcef77ba888ef41173779a71e0dbe944f953d7c64fd9dc5d6117fd8133611fcb565b60005b835181101561110557600060286000868481518110611821576118216142e2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061185d816142f8565b915050611800565b602b818154811061187557600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b6060602a80548060200260200160405190810160405280929190818152602001828054801561191357602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116118da5790505b5050505050905090565b6040805161010081018252600e548152600f546020820152601054918101919091526011546060820152601254608082015260135460a082015260145460ff1660c082015260155460e08201528351600091611978916123ce565b611983848484612899565b8351601080546000906119979084906142ca565b909155506119ad9050843360145460ff16612049565b949350505050565b60007f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6119e28133611fcb565b61103f6129a7565b6000806119f78133611fcb565b50506001600160a01b03166000908152600360205260409020805460ff19169055600190565b6000828152600160205260408120611a359083612a2f565b9392505050565b6060602b805480602002602001604051908101604052809291908181526020018280548015611913576000918252602091829020805461ffff1684529082028301929091600291018084116118da5790505050505050905090565b600080611aa48133611fcb565b5050600d80546001600160a01b0394851673ffffffffffffffffffffffffffffffffffffffff19918216179091556016805493851693821693909317909255601f8054919093169116179055600190565b600080611b028133611fcb565b60408051610100810182526017548152601854602082015260195491810191909152601a546060820152601b546080820152601c5460a0820152601d5460ff1660c0820152601e5460e08201528551611b5b91906123ce565b611b66858585612a3b565b845160198054600090611b7a9084906142ca565b90915550610c3c90508533601d5460ff166122d7565b600080611b9d8133611fcb565b825161110590602a906020860190613963565b6040805161010081018252600554815260065460208201526007549181019190915260085460608201526009546080820152600a5460a0820152600b5460ff1660c0820152600c5460e08201528551600091611c0b916123ce565b611c188686868686612b53565b855160078054600090611c2c9084906142ca565b90915550611061905086868633612299565b600080611c4b8133611fcb565b601f80546001600160a01b03851673ffffffffffffffffffffffffffffffffffffffff199091161790556001915050919050565b602a818154811061187557600080fd5b6000818152600160205260408120610c1e90612cc5565b600080611cb38133611fcb565b610c3c858585612702565b600082815260208190526040902060010154611cda8133611fcb565b610f1983836121db565b600080611cf18133611fcb565b50508051601755602081015160185560408101516019556060810151601a556080810151601b5560a0810151601c5560c0810151601d805460ff191660ff90921691909117905560e00151601e55600190565b6000611d5285858585612ccf565b600d546040516364948ecf60e01b81526000916001600160a01b0316906364948ecf90611d879089908990339060040161421d565b6020604051808303816000875af1158015611da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dca919061425c565b905080610da55760405162461bcd60e51b815260206004820152601d60248201527f537061636573686970204e4654206d6967726174696f6e204661696c210000006044820152606401610d9c565b600080611e268133611fcb565b50506001600160a01b03166000908152600360205260409020805460ff1916600190811790915590565b600080611e5d8133611fcb565b825161110590602b906020860190613963565b600080611e7d8133611fcb565b600d80546001600160a01b03851673ffffffffffffffffffffffffffffffffffffffff199091161790556001915050919050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16611006576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611f0b3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000611a35836001600160a01b038416612d03565b60006001600160e01b031982167f7965db0b000000000000000000000000000000000000000000000000000000001480610c1e57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610c1e565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661100657612007816001600160a01b03166014612d52565b612012836020612d52565b6040516020016120239291906143f9565b60408051601f198184030181529082905262461bcd60e51b8252610d9c91600401613f77565b60006120558483612efb565b600d546040516375b4cf9160e11b81526000916001600160a01b03169063eb699f2290612088908890889060040161447a565b6020604051808303816000875af11580156120a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120cb919061425c565b9050806117245760405162461bcd60e51b815260206004820152601e60248201527f54686520537061636573686970204e4654204d696e74206661696c65642100006044820152606401610d9c565b60007f602dece76758b93feaa6845c248bd683764edeb2c066415456a4345fd679a15e85604051602001610de5919061427e565b60008060008061216d6121678780519060200120612f5f565b86612fc8565b6001600160a01b038216600090815260036020526040902054919350915060ff1680156121ab575060008160048111156121a9576121a96144a5565b145b9350909150505b9250929050565b6121c38282611eb1565b6000828152600160205260409020610f199082611f4f565b6121e58282613035565b6000828152600160205260409020610f1990826130b4565b60025460ff1661224f5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610d9c565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600b546000906122af908690849060ff16612049565b50600b546122c3908590849060ff166122d7565b50600b54610c3c908490849060ff16612702565b60006122e38483612efb565b6016546040516375b4cf9160e11b81526000916001600160a01b03169063eb699f2290612316908890889060040161447a565b6020604051808303816000875af1158015612335573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612359919061425c565b9050806117245760405162461bcd60e51b815260206004820152602560248201527f54686520446566656e73697665466163696c697479204e4654204d696e74206660448201527f61696c65640000000000000000000000000000000000000000000000000000006064820152608401610d9c565b606082015143811115906123e1906130c9565b6040516020016123f191906144bb565b6040516020818303038152906040529061241e5760405162461bcd60e51b8152600401610d9c9190613f77565b503360009081526028602052604090205460ff1680612441575043826080015111155b61244e83608001516130c9565b60405160200161245e9190614531565b6040516020818303038152906040529061248b5760405162461bcd60e51b8152600401610d9c9190613f77565b50438260a00151116124a083608001516130c9565b6040516020016124b091906145a7565b604051602081830303815290604052906124dd5760405162461bcd60e51b8152600401610d9c9190613f77565b506000826040015183602001516124f4919061461d565b905081811015612503826130c9565b6040516020016125139190614634565b604051602081830303815290604052906125405760405162461bcd60e51b8152600401610d9c9190613f77565b506000806125528486600001516131c7565b91509150816125a35760405162461bcd60e51b815260206004820152601260248201527f546f6f206d616e79204d696e74204e46542100000000000000000000000000006044820152606401610d9c565b803410156125b0826130c9565b6040516020016125c091906146aa565b60405160208183030381529060405290610eeb5760405162461bcd60e51b8152600401610d9c9190613f77565b60007fb41d96c0fb8920d42e1428524a56d25b21858d7cea2e3e1d82ce89dead334aa384604051602001612621919061427e565b6040516020818303038152906040528051906020012061263e3390565b6040805160208101949094528301919091526001600160a01b031660608201526080810184905260a00160405160208183030381529060405290506000612685828461214e565b509050806126fb5760405162461bcd60e51b815260206004820152603460248201527f6d696e743a20546865206f7065726174696f6e206f66204d696e744865726f2060448201527f7065726d697373696f6e2069732077726f6e67210000000000000000000000006064820152608401610d9c565b5050505050565b600061270e8483612efb565b601f546040516375b4cf9160e11b81526000916001600160a01b03169063eb699f2290612741908890889060040161447a565b6020604051808303816000875af1158015612760573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612784919061425c565b9050806117245760405162461bcd60e51b815260206004820152601860248201527f546865204865726f204e4654204d696e74206661696c656400000000000000006044820152606401610d9c565b60606000845167ffffffffffffffff8111156127f1576127f1613a42565b60405190808252806020026020018201604052801561281a578160200160208202803683370190505b50905060005b855181101561145e5761286a86828151811061283e5761283e6142e2565b6020026020010151868381518110612858576128586142e2565b60200260200101518660e0015161320d565b82828151811061287c5761287c6142e2565b602090810291909101015280612891816142f8565b915050612820565b60007fcddf46db73237ee71f4517e9725b1d94a0e62e8451bc378f919f1f9fb49d76e8846040516020016128cd919061427e565b604051602081830303815290604052805190602001206128ea3390565b6040805160208101949094528301919091526001600160a01b031660608201526080810184905260a00160405160208183030381529060405290506000612931828461214e565b509050806126fb5760405162461bcd60e51b815260206004820152603960248201527f6d696e743a20546865206f7065726174696f6e206f66204d696e74537061636560448201527f73686970207065726d697373696f6e2069732077726f6e6721000000000000006064820152608401610d9c565b60025460ff16156129fa5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610d9c565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861227c3390565b6000611a3583836134d2565b60007fed09a39fbf11628d319c28f91bf6bf6e878d49996f11f74da832f0173138b94984604051602001612a6f919061427e565b60405160208183030381529060405280519060200120612a8c3390565b6040805160208101949094528301919091526001600160a01b031660608201526080810184905260a00160405160208183030381529060405290506000612ad3828461214e565b509050806126fb5760405162461bcd60e51b815260206004820152604160248201527f6d696e743a20546865206f7065726174696f6e206f66204d696e74446566656e60448201527f73697665466163696c697479207065726d697373696f6e2069732077726f6e676064820152602160f81b608482015260a401610d9c565b60007ff4779845a05dcd1ddaa4972e69b5721644c36171d66b85c7e59a63e75c4d3d6d86604051602001612b87919061427e565b6040516020818303038152906040528051906020012086604051602001612bae919061427e565b6040516020818303038152906040528051906020012086604051602001612bd5919061427e565b60405160208183030381529060405280519060200120612bf23390565b604080516020810196909652850193909352606084019190915260808301526001600160a01b031660a082015260c0810184905260e00160405160208183030381529060405290506000612c46828461214e565b50905080612cbc5760405162461bcd60e51b815260206004820152603460248201527f6d696e743a20546865206f7065726174696f6e206f66204d696e74537569742060448201527f7065726d697373696f6e2069732077726f6e67210000000000000000000000006064820152608401610d9c565b50505050505050565b6000610c1e825490565b60007fa0a632f3fd456558fefd46ff1e729ee6b07c7f28a4b45a74af35ec4e22258ac285604051602001610de5919061427e565b6000818152600183016020526040812054612d4a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610c1e565b506000610c1e565b60606000612d61836002614313565b612d6c9060026142ca565b67ffffffffffffffff811115612d8457612d84613a42565b6040519080825280601f01601f191660200182016040528015612dae576020820181803683370190505b509050600360fc1b81600081518110612dc957612dc96142e2565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612df857612df86142e2565b60200101906001600160f81b031916908160001a9053506000612e1c846002614313565b612e279060016142ca565b90505b6001811115612eac577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110612e6857612e686142e2565b1a60f81b828281518110612e7e57612e7e6142e2565b60200101906001600160f81b031916908160001a90535060049490941c93612ea581614716565b9050612e2a565b508315611a355760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d9c565b60005b8251811015610f19578160296000858481518110612f1e57612f1e6142e2565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908360ff1602179055508080612f57906142f8565b915050612efe565b6000610c1e612f6c6134fc565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080825160411415612fff5760208301516040840151606085015160001a612ff387828585613623565b945094505050506121b2565b825160401415613029576020830151604084015161301e868383613710565b9350935050506121b2565b506000905060026121b2565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1615611006576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611a35836001600160a01b038416613758565b6060816130ed5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156131175780613101816142f8565b91506131109050600a83614743565b91506130f1565b60008167ffffffffffffffff81111561313257613132613a42565b6040519080825280601f01601f19166020018201604052801561315c576020820181803683370190505b5090505b84156119ad5761317160018361461d565b915061317e600a86614757565b6131899060306142ca565b60f81b81838151811061319e5761319e6142e2565b60200101906001600160f81b031916908160001a9053506131c0600a86614743565b9450613160565b600080836131db57506001905060006121b2565b838302838582816131ee576131ee61472d565b04146132015760008092509250506121b2565b60019590945092505050565b60008140806132845760405162461bcd60e51b815260206004820152602b60248201527f4661696c656420746f206f627461696e2074686520626c6f636b20686173682e60448201527f2050726f636564757265210000000000000000000000000000000000000000006064820152608401610d9c565b604080516003808252608082019092526000916020820160608036833701905050905060006127106132b5886130c9565b6132be8861123f565b6132c78661384b565b6040516020016132d99392919061476b565b6040516020818303038152906040528051906020012060001c6132fc9190614757565b9050613380602a80548060200260200160405190810160405280929190818152602001828054801561337557602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161333c5790505b5050505050826138b8565b82600081518110613393576133936142e2565b602002602001019060ff16908160ff168152505060006127106133b5896130c9565b6133be8961123f565b6133c78761384b565b6040516020016133d9939291906147f6565b6040516020818303038152906040528051906020012060001c6133fc9190614757565b905061345b602b805480602002602001604051908101604052809291908181526020018280548015613375576000918252602091829020805461ffff16845290820283019290916002910180841161333c5790505050505050826138b8565b8360018151811061346e5761346e6142e2565b60ff92831660209182029290920181019190915260008a8152602990915260409020548451911690849060029081106134a9576134a96142e2565b602002602001019060ff16908160ff16815250506134c683613913565b98975050505050505050565b60008260000182815481106134e9576134e96142e2565b9060005260206000200154905092915050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561355557507f000000000000000000000000000000000000000000000000000000000000000046145b1561357f57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561365a5750600090506003613707565b8460ff16601b1415801561367257508460ff16601c14155b156136835750600090506004613707565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156136d7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661370057600060019250925050613707565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660ff84901c601b0161374a87828885613623565b935093505050935093915050565b6000818152600183016020526040812054801561384157600061377c60018361461d565b85549091506000906137909060019061461d565b90508181146137f55760008660000182815481106137b0576137b06142e2565b90600052602060002001549050808760000184815481106137d3576137d36142e2565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061380657613806614881565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610c1e565b6000915050610c1e565b60608161388b57505060408051808201909152600481527f3078303000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156138ae578061389f816142f8565b915050600882901c915061388f565b6119ad8482612d52565b6000805b8351811015611105578381815181106138d7576138d76142e2565b602002602001015161ffff168361ffff161015613901576138f98160016142ca565b915050610c1e565b8061390b816142f8565b9150506138bc565b600080805b835181101561395c57600882901b915083818151811061393a5761393a6142e2565b602002602001015160ff16821791508080613954906142f8565b915050613918565b5092915050565b82805482825590600052602060002090600f016010900481019282156139fc5791602002820160005b838211156139cc57835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030261398c565b80156139fa5782816101000a81549061ffff02191690556002016020816001010492830192600103026139cc565b505b506110449291505b808211156110445760008155600101613a04565b600060208284031215613a2a57600080fd5b81356001600160e01b031981168114611a3557600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715613a8157613a81613a42565b604052919050565b600067ffffffffffffffff821115613aa357613aa3613a42565b5060051b60200190565b600082601f830112613abe57600080fd5b81356020613ad3613ace83613a89565b613a58565b82815260059290921b84018101918181019086841115613af257600080fd5b8286015b84811015613b0d5780358352918301918301613af6565b509695505050505050565b6001600160a01b0381168114613b2d57600080fd5b50565b803560ff81168114613b4157600080fd5b919050565b600080600060608486031215613b5b57600080fd5b833567ffffffffffffffff811115613b7257600080fd5b613b7e86828701613aad565b9350506020840135613b8f81613b18565b9150613b9d60408501613b30565b90509250925092565b6000610100808385031215613bba57600080fd5b6040519081019067ffffffffffffffff82118183101715613bdd57613bdd613a42565b81604052833581526020840135602082015260408401356040820152606084013560608201526080840135608082015260a084013560a0820152613c2360c08501613b30565b60c082015260e084013560e0820152809250505092915050565b600082601f830112613c4e57600080fd5b813567ffffffffffffffff811115613c6857613c68613a42565b613c7b601f8201601f1916602001613a58565b818152846020838601011115613c9057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215613cc357600080fd5b843567ffffffffffffffff80821115613cdb57600080fd5b613ce788838901613aad565b95506020870135915080821115613cfd57600080fd5b613d0988838901613aad565b9450604087013593506060870135915080821115613d2657600080fd5b50613d3387828801613c3d565b91505092959194509250565b600060208284031215613d5157600080fd5b5035919050565b60008060408385031215613d6b57600080fd5b823591506020830135613d7d81613b18565b809150509250929050565b600060208284031215613d9a57600080fd5b8135611a3581613b18565b60008060008060808587031215613dbb57600080fd5b843567ffffffffffffffff80821115613dd357600080fd5b613ddf88838901613aad565b95506020870135915080821115613df557600080fd5b613e0188838901613aad565b94506040870135915080821115613e1757600080fd5b50613e2487828801613aad565b9250506060850135613e3581613b18565b939692955090935050565b600080600060608486031215613e5557600080fd5b833567ffffffffffffffff80821115613e6d57600080fd5b613e7987838801613aad565b9450602086013593506040860135915080821115613e9657600080fd5b50613ea386828701613c3d565b9150509250925092565b60006020808385031215613ec057600080fd5b823567ffffffffffffffff811115613ed757600080fd5b8301601f81018513613ee857600080fd5b8035613ef6613ace82613a89565b81815260059190911b82018301908381019087831115613f1557600080fd5b928401925b82841015613f3c578335613f2d81613b18565b82529284019290840190613f1a565b979650505050505050565b60005b83811015613f62578181015183820152602001613f4a565b83811115613f71576000848401525b50505050565b6020815260008251806020840152613f96816040850160208701613f47565b601f01601f19169190910160400192915050565b600060208284031215613fbc57600080fd5b813567ffffffffffffffff811115613fd357600080fd5b6119ad84828501613aad565b6020808252825182820181905260009190848201906040850190845b8181101561401b57835161ffff1683529284019291840191600101613ffb565b50909695505050505050565b6000806040838503121561403a57600080fd5b50508035926020909101359150565b60008060006060848603121561405e57600080fd5b833561406981613b18565b9250602084013561407981613b18565b9150604084013561408981613b18565b809150509250925092565b600060208083850312156140a757600080fd5b823567ffffffffffffffff8111156140be57600080fd5b8301601f810185136140cf57600080fd5b80356140dd613ace82613a89565b81815260059190911b820183019083810190878311156140fc57600080fd5b928401925b82841015613f3c57833561ffff8116811461411c5760008081fd5b82529284019290840190614101565b600080600080600060a0868803121561414357600080fd5b853567ffffffffffffffff8082111561415b57600080fd5b61416789838a01613aad565b9650602088013591508082111561417d57600080fd5b61418989838a01613aad565b9550604088013591508082111561419f57600080fd5b6141ab89838a01613aad565b94506060880135935060808801359150808211156141c857600080fd5b506141d588828901613c3d565b9150509295509295909350565b600081518084526020808501945080840160005b83811015614212578151875295820195908201906001016141f6565b509495945050505050565b60608152600061423060608301866141e2565b828103602084015261424281866141e2565b9150506001600160a01b0383166040830152949350505050565b60006020828403121561426e57600080fd5b81518015158114611a3557600080fd5b815160009082906020808601845b838110156142a85781518552938201939082019060010161428c565b50929695505050505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156142dd576142dd6142b4565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561430c5761430c6142b4565b5060010190565b600081600019048311821515161561432d5761432d6142b4565b500290565b602081526000611a3560208301846141e2565b6000602080838503121561435857600080fd5b825167ffffffffffffffff81111561436f57600080fd5b8301601f8101851361438057600080fd5b805161438e613ace82613a89565b81815260059190911b820183019083810190878311156143ad57600080fd5b928401925b82841015613f3c5783516143c581613b18565b825292840192908401906143b2565b6040815260006143e760408301856141e2565b8281036020840152610c3c81856141e2565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351614431816017850160208801613f47565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161446e816028840160208801613f47565b01602801949350505050565b60408152600061448d60408301856141e2565b90506001600160a01b03831660208301529392505050565b634e487b7160e01b600052602160045260246000fd5b7f57686974656c69737465642075736572732077696c6c20656e61626c65206d6981527f6e7420616374697669747920696e20626c6f636b200000000000000000000000602082015260008251614519816035850160208701613f47565b602160f81b6035939091019283015250603601919050565b7f4e6f6e2d77686974656c69737465642075736572732077696c6c20737461727481527f206d696e7420616374697669747920696e20626c6f636b20000000000000000060208201526000825161458f816038850160208701613f47565b602160f81b6038939091019283015250603901919050565b7f546865204d696e742063616d706169676e2068617320656e646564206174206281527f6c6f636b20000000000000000000000000000000000000000000000000000000602082015260008251614605816025850160208701613f47565b602160f81b6025939091019283015250602601919050565b60008282101561462f5761462f6142b4565b500390565b7f596f752063616e206d696e7420757020746f200000000000000000000000000081526000825161466c816013850160208701613f47565b7f204e4654207365747320000000000000000000000000000000000000000000006013939091019283015250602160f81b601d820152601e01919050565b7f596f75206e65656420746f2070617920000000000000000000000000000000008152600082516146e2816010850160208701613f47565b7f20776569000000000000000000000000000000000000000000000000000000006010939091019283015250601401919050565b600081614725576147256142b4565b506000190190565b634e487b7160e01b600052601260045260246000fd5b6000826147525761475261472d565b500490565b6000826147665761476661472d565b500690565b7f7175616c6974790000000000000000000000000000000000000000000000000081526000605f60f81b80600784015285516147ae816008860160208a01613f47565b808401905081600882015285516147cc816009840160208a01613f47565b0160098101919091528351906147e982600a830160208801613f47565b01600a0195945050505050565b7f726163650000000000000000000000000000000000000000000000000000000081526000605f60f81b8060048401528551614839816005860160208a01613f47565b80840190508160058201528551614857816006840160208a01613f47565b016006810191909152835190614874826007830160208801613f47565b0160070195945050505050565b634e487b7160e01b600052603160045260246000fdfea26469706673582212204dee3f6df169fc3aeb2b6801e92ff2b91d638b41eb3afeae540ffb74cf9ee65664736f6c634300080a0033fbd6b3ad612c81ecfcef77ba888ef41173779a71e0dbe944f953d7c64fd9dc5d";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_PAUSER_ROLE = "PAUSER_ROLE";

    public static final String FUNC_SIGN_ROLE = "SIGN_ROLE";

    public static final String FUNC__CHECKHEROMIGRATIONSIGN = "_checkHeroMigrationSign";

    public static final String FUNC_ADDSIGNER = "addSigner";

    public static final String FUNC_ADDWHITELIST = "addWhiteList";

    public static final String FUNC_ADDRESSTOSTRING = "addressToString";

    public static final String FUNC_DEFENSIVEFACILITY = "defensiveFacility";

    public static final String FUNC_DEFENSIVEFACILITYCONFIG = "defensiveFacilityConfig";

    public static final String FUNC_DEFENSIVEFACILITYMIGRATION = "defensiveFacilityMigration";

    public static final String FUNC_DELSIGNER = "delSigner";

    public static final String FUNC_DELWHITELIST = "delWhiteList";

    public static final String FUNC_GETQUALITYRATE = "getQualityRate";

    public static final String FUNC_GETRACERATE = "getRaceRate";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GETROLEMEMBER = "getRoleMember";

    public static final String FUNC_GETROLEMEMBERCOUNT = "getRoleMemberCount";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_HERO = "hero";

    public static final String FUNC_HEROCONFIG = "heroConfig";

    public static final String FUNC_HEROMIGRATION = "heroMigration";

    public static final String FUNC_INITSPACESHIPGENS = "initSpaceshipGens";

    public static final String FUNC_MINTDEFENSIVEFACILITY = "mintDefensiveFacility";

    public static final String FUNC_MINTDEFENSIVEFACILITYOFFICIAL = "mintDefensiveFacilityOfficial";

    public static final String FUNC_MINTHERO = "mintHero";

    public static final String FUNC_MINTHEROOFFICIAL = "mintHeroOfficial";

    public static final String FUNC_MINTSPACESHIP = "mintSpaceship";

    public static final String FUNC_MINTSPACESHIPOFFICIAL = "mintSpaceshipOfficial";

    public static final String FUNC_MINTSUIT = "mintSuit";

    public static final String FUNC_MINTSUITOFFICIAL = "mintSuitOfficial";

    public static final String FUNC_PAUSE = "pause";

    public static final String FUNC_PAUSED = "paused";

    public static final String FUNC_QUALITYRATE = "qualityRate";

    public static final String FUNC_RACERATE = "raceRate";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_SETDEFENSIVEFACILITY = "setDefensiveFacility";

    public static final String FUNC_SETDEFENSIVEFACILITYCONFIG = "setDefensiveFacilityConfig";

    public static final String FUNC_SETHERO = "setHero";

    public static final String FUNC_SETHEROCONFIG = "setHeroConfig";

    public static final String FUNC_SETNFTADDR = "setNFTAddr";

    public static final String FUNC_SETQUALITYRATE = "setQualityRate";

    public static final String FUNC_SETRACERATE = "setRaceRate";

    public static final String FUNC_SETSPACESHIP = "setSpaceship";

    public static final String FUNC_SETSPACESHIPCONFIG = "setSpaceshipConfig";

    public static final String FUNC_SETSUITCONFIG = "setSuitConfig";

    public static final String FUNC_SIGNERS = "signers";

    public static final String FUNC_SPACESHIP = "spaceship";

    public static final String FUNC_SPACESHIPCONFIG = "spaceshipConfig";

    public static final String FUNC_SPACESHIPMIGRATION = "spaceshipMigration";

    public static final String FUNC_SUITCONFIG = "suitConfig";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_TOKENSTYLE = "tokenStyle";

    public static final String FUNC_UNPAUSE = "unpause";

    public static final String FUNC_WHITELIST = "whiteList";

    public static final String FUNC_WITHDRAW = "withdraw";

    public static final Event PAUSED_EVENT = new Event("Paused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event UNPAUSED_EVENT = new Event("Unpaused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
    }

    @Deprecated
    protected MintManager(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected MintManager(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected MintManager(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected MintManager(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<PausedEventResponse> getPausedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(PAUSED_EVENT, transactionReceipt);
        ArrayList<PausedEventResponse> responses = new ArrayList<PausedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            PausedEventResponse typedResponse = new PausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PausedEventResponse>() {
            @Override
            public PausedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(PAUSED_EVENT, log);
                PausedEventResponse typedResponse = new PausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PAUSED_EVENT));
        return pausedEventFlowable(filter);
    }

    public List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, transactionReceipt);
        ArrayList<RoleAdminChangedEventResponse> responses = new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleAdminChangedEventResponse>() {
            @Override
            public RoleAdminChangedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
                RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public List<RoleGrantedEventResponse> getRoleGrantedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<RoleGrantedEventResponse> responses = new ArrayList<RoleGrantedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleGrantedEventResponse>() {
            @Override
            public RoleGrantedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEGRANTED_EVENT, log);
                RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public List<RoleRevokedEventResponse> getRoleRevokedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<RoleRevokedEventResponse> responses = new ArrayList<RoleRevokedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleRevokedEventResponse>() {
            @Override
            public RoleRevokedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEREVOKED_EVENT, log);
                RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public List<UnpausedEventResponse> getUnpausedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UNPAUSED_EVENT, transactionReceipt);
        ArrayList<UnpausedEventResponse> responses = new ArrayList<UnpausedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UnpausedEventResponse typedResponse = new UnpausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, UnpausedEventResponse>() {
            @Override
            public UnpausedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(UNPAUSED_EVENT, log);
                UnpausedEventResponse typedResponse = new UnpausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(UNPAUSED_EVENT));
        return unpausedEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<byte[]> PAUSER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSER_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<byte[]> SIGN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SIGN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> addSigner(String sign) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDSIGNER, 
                Arrays.<Type>asList(new Address(sign)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addWhiteList(List<String> accounts) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDWHITELIST, 
                Arrays.<Type>asList(new DynamicArray<Address>(
                        Address.class,
                        org.web3j.abi.Utils.typeMap(accounts, Address.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> addressToString(String _addr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ADDRESSTOSTRING, 
                Arrays.<Type>asList(new Address(_addr)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> defensiveFacility() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFENSIVEFACILITY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>> defensiveFacilityConfig() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFENSIVEFACILITYCONFIG, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (BigInteger) results.get(7).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> defensiveFacilityMigration(List<BigInteger> tokenIds, List<BigInteger> genes, BigInteger deadline, byte[] signature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEFENSIVEFACILITYMIGRATION, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(tokenIds, Uint256.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(genes, Uint256.class)),
                new Uint256(deadline),
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> delSigner(String sign) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELSIGNER, 
                Arrays.<Type>asList(new Address(sign)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> delWhiteList(List<String> accounts) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELWHITELIST, 
                Arrays.<Type>asList(new DynamicArray<Address>(
                        Address.class,
                        org.web3j.abi.Utils.typeMap(accounts, Address.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getQualityRate() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETQUALITYRATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint16>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getRaceRate() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRACERATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint16>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new Bytes32(role)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<String> getRoleMember(byte[] role, BigInteger index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEMEMBER, 
                Arrays.<Type>asList(new Bytes32(role),
                new Uint256(index)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getRoleMemberCount(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEMEMBERCOUNT, 
                Arrays.<Type>asList(new Bytes32(role)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new Bytes32(role),
                new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASROLE, 
                Arrays.<Type>asList(new Bytes32(role),
                new Address(account)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> hero() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HERO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>> heroConfig() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HEROCONFIG, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (BigInteger) results.get(7).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> heroMigration(List<BigInteger> tokenIds, List<BigInteger> genes, BigInteger deadline, byte[] signature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_HEROMIGRATION, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(tokenIds, Uint256.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(genes, Uint256.class)),
                new Uint256(deadline),
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> initSpaceshipGens(List<BigInteger> tokenIds) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INITSPACESHIPGENS, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(tokenIds, Uint256.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> mintDefensiveFacility(List<BigInteger> tokenIds, BigInteger deadline, byte[] signature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINTDEFENSIVEFACILITY, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(tokenIds, Uint256.class)),
                new Uint256(deadline),
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> mintDefensiveFacilityOfficial(List<BigInteger> tokenIds, String owner, BigInteger style) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINTDEFENSIVEFACILITYOFFICIAL, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(tokenIds, Uint256.class)),
                new Address(owner),
                new Uint8(style)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> mintHero(List<BigInteger> tokenIds, BigInteger deadline, byte[] signature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINTHERO, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(tokenIds, Uint256.class)),
                new Uint256(deadline),
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> mintHeroOfficial(List<BigInteger> tokenIds, String owner, BigInteger style) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINTHEROOFFICIAL, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(tokenIds, Uint256.class)),
                new Address(owner),
                new Uint8(style)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> mintSpaceship(List<BigInteger> tokenIds, BigInteger deadline, byte[] signature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINTSPACESHIP, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(tokenIds, Uint256.class)),
                new Uint256(deadline),
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> mintSpaceshipOfficial(List<BigInteger> tokenIds, String owner, BigInteger style) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINTSPACESHIPOFFICIAL, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(tokenIds, Uint256.class)),
                new Address(owner),
                new Uint8(style)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> mintSuit(List<BigInteger> spaceshipIds, List<BigInteger> defensiveFacilityIds, List<BigInteger> heroIds, BigInteger dealline, byte[] signature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINTSUIT, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(spaceshipIds, Uint256.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(defensiveFacilityIds, Uint256.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(heroIds, Uint256.class)),
                new Uint256(dealline),
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> mintSuitOfficial(List<BigInteger> spaceshipIds, List<BigInteger> defensiveFacilityIds, List<BigInteger> heroIds, String owner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINTSUITOFFICIAL, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(spaceshipIds, Uint256.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(defensiveFacilityIds, Uint256.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(heroIds, Uint256.class)),
                new Address(owner)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> pause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> qualityRate(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_QUALITYRATE, 
                Arrays.<Type>asList(new Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint16>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> raceRate(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_RACERATE, 
                Arrays.<Type>asList(new Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint16>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new Bytes32(role),
                new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new Bytes32(role),
                new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setDefensiveFacility(String defensiveFacilityAddr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETDEFENSIVEFACILITY, 
                Arrays.<Type>asList(new Address(defensiveFacilityAddr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setDefensiveFacilityConfig(Config _defensiveFacilityConfig) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETDEFENSIVEFACILITYCONFIG, 
                Arrays.<Type>asList(_defensiveFacilityConfig), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setHero(String heroAddr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETHERO, 
                Arrays.<Type>asList(new Address(heroAddr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setHeroConfig(Config _heroConfig) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETHEROCONFIG, 
                Arrays.<Type>asList(_heroConfig), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setNFTAddr(String spaceshipAddr, String defensiveFacilityAddr, String heroAddr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETNFTADDR, 
                Arrays.<Type>asList(new Address(spaceshipAddr),
                new Address(defensiveFacilityAddr),
                new Address(heroAddr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setQualityRate(List<BigInteger> _qualityRate) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETQUALITYRATE, 
                Arrays.<Type>asList(new DynamicArray<Uint16>(
                        Uint16.class,
                        org.web3j.abi.Utils.typeMap(_qualityRate, Uint16.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setRaceRate(List<BigInteger> _raceRate) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETRACERATE, 
                Arrays.<Type>asList(new DynamicArray<Uint16>(
                        Uint16.class,
                        org.web3j.abi.Utils.typeMap(_raceRate, Uint16.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setSpaceship(String spaceshipAddr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETSPACESHIP, 
                Arrays.<Type>asList(new Address(spaceshipAddr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setSpaceshipConfig(Config _spaceshipConfig) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETSPACESHIPCONFIG, 
                Arrays.<Type>asList(_spaceshipConfig), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setSuitConfig(Config _suitConfig) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETSUITCONFIG, 
                Arrays.<Type>asList(_suitConfig), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> signers(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SIGNERS, 
                Arrays.<Type>asList(new Address(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> spaceship() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SPACESHIP, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>> spaceshipConfig() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SPACESHIPCONFIG, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (BigInteger) results.get(7).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> spaceshipMigration(List<BigInteger> tokenIds, List<BigInteger> genes, BigInteger deadline, byte[] signature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SPACESHIPMIGRATION, 
                Arrays.<Type>asList(new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(tokenIds, Uint256.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(genes, Uint256.class)),
                new Uint256(deadline),
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>> suitConfig() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUITCONFIG, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (BigInteger) results.get(7).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> tokenStyle(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOKENSTYLE, 
                Arrays.<Type>asList(new Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> unpause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> whiteList(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WHITELIST, 
                Arrays.<Type>asList(new Address(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> withdraw(String feeAddr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAW, 
                Arrays.<Type>asList(new Address(feeAddr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static MintManager load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new MintManager(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static MintManager load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new MintManager(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static MintManager load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new MintManager(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static MintManager load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new MintManager(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<MintManager> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, Config _configSuit, Config _spaceshipConfig, Config _defensiveFacilityConfig, Config _heroConfig, String sign) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_configSuit, 
                _spaceshipConfig, 
                _defensiveFacilityConfig, 
                _heroConfig, 
                new Address(sign)));
        return deployRemoteCall(MintManager.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<MintManager> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, Config _configSuit, Config _spaceshipConfig, Config _defensiveFacilityConfig, Config _heroConfig, String sign) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_configSuit, 
                _spaceshipConfig, 
                _defensiveFacilityConfig, 
                _heroConfig, 
                new Address(sign)));
        return deployRemoteCall(MintManager.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<MintManager> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, Config _configSuit, Config _spaceshipConfig, Config _defensiveFacilityConfig, Config _heroConfig, String sign) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_configSuit, 
                _spaceshipConfig, 
                _defensiveFacilityConfig, 
                _heroConfig, 
                new Address(sign)));
        return deployRemoteCall(MintManager.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<MintManager> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, Config _configSuit, Config _spaceshipConfig, Config _defensiveFacilityConfig, Config _heroConfig, String sign) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_configSuit, 
                _spaceshipConfig, 
                _defensiveFacilityConfig, 
                _heroConfig, 
                new Address(sign)));
        return deployRemoteCall(MintManager.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class Config extends StaticStruct {
        public BigInteger price;

        public BigInteger max;

        public BigInteger current;

        public BigInteger wlStartBn;

        public BigInteger startBn;

        public BigInteger endBn;

        public BigInteger style;

        public BigInteger openBn;

        public Config(BigInteger price, BigInteger max, BigInteger current, BigInteger wlStartBn, BigInteger startBn, BigInteger endBn, BigInteger style, BigInteger openBn) {
            super(new Uint256(price),new Uint256(max),new Uint256(current),new Uint256(wlStartBn),new Uint256(startBn),new Uint256(endBn),new Uint8(style),new Uint256(openBn));
            this.price = price;
            this.max = max;
            this.current = current;
            this.wlStartBn = wlStartBn;
            this.startBn = startBn;
            this.endBn = endBn;
            this.style = style;
            this.openBn = openBn;
        }

        public Config(Uint256 price, Uint256 max, Uint256 current, Uint256 wlStartBn, Uint256 startBn, Uint256 endBn, Uint8 style, Uint256 openBn) {
            super(price,max,current,wlStartBn,startBn,endBn,style,openBn);
            this.price = price.getValue();
            this.max = max.getValue();
            this.current = current.getValue();
            this.wlStartBn = wlStartBn.getValue();
            this.startBn = startBn.getValue();
            this.endBn = endBn.getValue();
            this.style = style.getValue();
            this.openBn = openBn.getValue();
        }
    }

    public static class PausedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class UnpausedEventResponse extends BaseEventResponse {
        public String account;
    }
}
